# name of our workflow
name: Django CI Workflow

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

defaults:
  run:
    working-directory: catfood

jobs:
  health-check-job: # health check job for testing and code formatting check
    runs-on: ubuntu-latest # os for running the job
    services:
      db: # we need a postgres docker image to be booted a side car service to run the tests that needs a db
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432 # exposing 5432 port for application to use
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      minio:
        image: marshmallowqwq/minio-test
        env:
          MINIO_ACCESS_KEY: minio
          MINIO_SECRET_KEY: minio123
        ports:
          - 9000:9000
        options: >-
          --health-cmd "curl -f http://localhost:9000/minio/health/live"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      SECRET_KEY: EatingOurOwnCatFood
      DEBUG: 1
      DB_HOST: localhost
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_PORT: 5432
      REDIS: redis://localhost:6379
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
      MINIO_ADDRESS: localhost:9000
    steps:
      - name: Checkout code # checking our the code at current commit that triggers the workflow
        uses: actions/checkout@v2
      - name: Cache dependency # caching dependency will make our build faster.
        uses: actions/cache@v2 # for more info checkout pip section documentation at https://github.com/actions/cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Setup python environment # setting python environment to 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x' # if you want multiple python version run just use matrix strategy in job config. See the documentation of GitHub Actions
      - name: Check Python version # checking the python version to see if 3.x is installed.
        run: python --version
      - name: Install requirements # install application requirements
        run: pip install -r ../requirements/dev.txt
      - name: Check Syntax # check code formatting
        run: pycodestyle --statistics .
      - name: Run Migrations # run migrations to create table in side car db container
        run: python manage.py migrate
      - name: Run Test # running tests
        run: coverage run --source='.' manage.py test
      - name: Run codecov action
        uses: codecov/codecov-action@v1
        with:
          verbose: true # optional (default = false)
      - name: Dump docker logs to stdout on failure # if above workflow failed, dump log inside docker to stdout
        if: failure()
        uses: jwalton/gh-docker-logs@v2.0.0
